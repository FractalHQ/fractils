{
  "type": "svelte",
  "fileName": "Code.svelte",
  "filePath": "src/lib/components/Code.svelte",
  "comment": {
    "raw": "/**\n * A styled code block with syntax highlighting. On the client, the code is highlighted using [Shikiji](https://github.com/antfu/shikiji) using the {@link highlight} util unless the `ssr` prop is set to true and the highlighted text is provided as the `highlightedText` prop. The raw `text` prop is still required in this case, as it's used for screen readers and the copy button.\n *\n * @example\n *\n * CSR\n *\n * A simple browser example:\n * ```svelte\n * <script>\n * \timport Code from 'fractils'\n *\n * \tconst text = `console.log('hello world')`\n * </script>\n *\n * <Code {text} />\n * ```\n *\n * @example\n *\n * SSR\n * ```svelte +page.svelte\n * <script>\n * \timport Code from 'fractils'\n *\n * \texport let data\n * \tconst { text, highlightedText } = data\n * </script>\n *\n * <Code ssr {text} {highlightedText} />\n * ```\n *\n * ```typescript +page.ts\n * import { highlight } from 'fractils/utils/highlight'\n *\n * export async function load({ page, fetch }) {\n * \tconst text = `console.log('hello world')`\n * \tconst highlightedText = await highlight(text, { lang: 'js' })\n *\n * \treturn {\n * \t\ttext,\n * \t\thighlightedText,\n * \t}\n * }\n * ```\n *\n */",
    "links": [
      {
        "target": "highlight",
        "text": "highlight"
      }
    ],
    "summary": "<p>A styled code block with syntax highlighting. On the client, the code is\nhighlighted using <a href=\"https://github.com/antfu/shikiji\">Shikiji</a> using the\n<a href=\"#highlight\">highlight</a> util unless the <code>ssr</code> prop is set to true and the highlighted\ntext is provided as the <code>highlightedText</code> prop. The raw <code>text</code> prop is still\nrequired in this case, as it&#39;s used for screen readers and the copy button.</p>\n",
    "examples": [
      {
        "name": "CSR",
        "content": "\n\nA simple browser example:\n\n```svelte\n<script>\n\timport Code from 'fractils'\n\n\tconst text = `console.log('hello world')`\n</script>\n\n<Code {text} />\n```",
        "blocks": [
          {
            "type": "other",
            "content": "<p>A simple browser example:</p>\n"
          },
          {
            "type": "code",
            "content": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#777D8F\">&#x3C;script></span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    import </span><span style=\"color:#DEE0EF\">Code</span><span style=\"color:#5BA2D0\"> from </span><span style=\"color:#A78BFA\">'fractils'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    const</span><span style=\"color:#DEE0EF\"> text</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#A78BFA\"> `console.log('hello world')`</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">&#x3C;/script></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#777D8F\">&#x3C;</span><span style=\"color:#F8D2C9\">Code</span><span style=\"color:#9CCFD8;font-style:italic\"> {</span><span style=\"color:#DEE0EF\">text</span><span style=\"color:#9CCFD8;font-style:italic\">}</span><span style=\"color:#777D8F\"> /></span></span></code></pre>",
            "lang": "svelte",
            "raw": "<script>\n    import Code from 'fractils'\n\n    const text = `console.log('hello world')`\n</script>\n\n<Code {text} />",
            "title": ""
          }
        ]
      },
      {
        "name": "SSR",
        "content": "\n\n```svelte +page.svelte\n<script>\n\timport Code from 'fractils'\n\n\texport let data\n\tconst { text, highlightedText } = data\n</script>\n\n<Code ssr {text} {highlightedText} />\n```\n\n```typescript +page.ts\nimport { highlight } from 'fractils/utils/highlight'\n\nexport async function load({ page, fetch }) {\n\tconst text = `console.log('hello world')`\n\tconst highlightedText = await highlight(text, { lang: 'js' })\n\n\treturn {\n\t\ttext,\n\t\thighlightedText,\n\t}\n}\n```",
        "blocks": [
          {
            "type": "code",
            "content": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#777D8F\">&#x3C;script></span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    import </span><span style=\"color:#DEE0EF\">Code</span><span style=\"color:#5BA2D0\"> from </span><span style=\"color:#A78BFA\">'fractils'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    export</span><span style=\"color:#5BA2D0\"> let</span><span style=\"color:#DEE0EF\"> data</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    const</span><span style=\"color:#8D8F9E\"> {</span><span style=\"color:#DEE0EF\"> text</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#DEE0EF\"> highlightedText</span><span style=\"color:#8D8F9E\"> }</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#DEE0EF\"> data</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">&#x3C;/script></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#777D8F\">&#x3C;</span><span style=\"color:#F8D2C9\">Code</span><span style=\"color:#9CCFD8;font-style:italic\"> ssr</span><span style=\"color:#9CCFD8;font-style:italic\"> {</span><span style=\"color:#DEE0EF\">text</span><span style=\"color:#9CCFD8;font-style:italic\">}</span><span style=\"color:#9CCFD8;font-style:italic\"> {</span><span style=\"color:#DEE0EF\">highlightedText</span><span style=\"color:#9CCFD8;font-style:italic\">}</span><span style=\"color:#777D8F\"> /></span></span></code></pre>",
            "lang": "svelte",
            "raw": "<script>\n    import Code from 'fractils'\n\n    export let data\n    const { text, highlightedText } = data\n</script>\n\n<Code ssr {text} {highlightedText} />",
            "title": "+page.svelte"
          },
          {
            "type": "code",
            "content": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#5BA2D0\">import </span><span style=\"color:#8D8F9E\">{</span><span style=\"color:#DEE0EF\"> highlight</span><span style=\"color:#8D8F9E\"> }</span><span style=\"color:#5BA2D0\"> from </span><span style=\"color:#A78BFA\">'fractils/utils/highlight'</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">export</span><span style=\"color:#5BA2D0\"> async</span><span style=\"color:#5BA2D0\"> function</span><span style=\"color:#F8D2C9\"> load</span><span style=\"color:#8D8F9E\">({</span><span style=\"color:#9CCFD8\"> page</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#9CCFD8\"> fetch</span><span style=\"color:#8D8F9E\"> })</span><span style=\"color:#8D8F9E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    const</span><span style=\"color:#DEE0EF\"> text</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#A78BFA\"> `console.log('hello world')`</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    const</span><span style=\"color:#DEE0EF\"> highlightedText</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#5BA2D0\"> await</span><span style=\"color:#F8D2C9\"> highlight</span><span style=\"color:#DEE0EF\">(text</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#8D8F9E\"> {</span><span style=\"color:#777D8F\"> lang</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#A78BFA\"> 'js'</span><span style=\"color:#8D8F9E\"> }</span><span style=\"color:#DEE0EF\">)</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    return</span><span style=\"color:#8D8F9E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#DEE0EF\">        text</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#DEE0EF\">        highlightedText</span><span style=\"color:#8D8F9E\">,</span></span>\n<span class=\"line\"><span style=\"color:#8D8F9E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#8D8F9E\">}</span></span></code></pre>",
            "lang": "typescript",
            "raw": "import { highlight } from 'fractils/utils/highlight'\n\nexport async function load({ page, fetch }) {\n    const text = `console.log('hello world')`\n    const highlightedText = await highlight(text, { lang: 'js' })\n\n    return {\n        text,\n        highlightedText,\n    }\n}",
            "title": "+page.ts"
          }
        ]
      }
    ]
  },
  "componentName": "Code",
  "props": [
    {
      "comment": {
        "raw": "/**\n * The string to highlight.\n */",
        "summary": "<p>The string to highlight.</p>\n"
      },
      "name": "text",
      "type": "string"
    },
    {
      "comment": {
        "raw": "/**\n * Effectively just disables the client-side highlighting, assuming the text has already been highlighted on the server.\n *\n * @defaultValue\n *\n * false\n */",
        "summary": "<p>Effectively just disables the client-side highlighting,\nassuming the text has already been highlighted on the server.</p>\n",
        "defaultValue": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F8D2C9\">false</span></span></code></pre>"
      },
      "name": "ssr",
      "type": "boolean"
    },
    {
      "comment": {
        "raw": "/**\n * Optional pre-highlighted text. If this is provided _and_ the {@link ssr} prop is `true`, the highlighter will not be loaded / run on the client.\n */",
        "links": [
          {
            "target": "ssr",
            "text": "ssr"
          }
        ],
        "summary": "<p>Optional pre-highlighted text. If this is provided <em>and</em> the <a href=\"#ssr\">ssr</a>\nprop is <code>true</code>, the highlighter will not be loaded / run on the client.</p>\n"
      },
      "name": "highlightedText",
      "type": "string"
    },
    {
      "comment": {
        "raw": "/**\n * An optional title to display above the code block.\n *\n * @defaultValue\n *\n * 'code'\n */",
        "summary": "<p>An optional title to display above the code block.</p>\n",
        "defaultValue": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A78BFA\">'code'</span></span></code></pre>"
      },
      "name": "title",
      "type": "string"
    },
    {
      "comment": {
        "raw": "/**\n * The language to use. Must be a {@link ValidLanguage}.\n *\n * @defaultValue\n *\n * 'json'\n */",
        "links": [
          {
            "target": "ValidLanguage",
            "text": "ValidLanguage"
          }
        ],
        "summary": "<p>The language to use. Must be a <a href=\"#ValidLanguage\">ValidLanguage</a>.</p>\n",
        "defaultValue": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A78BFA\">'json'</span></span></code></pre>"
      },
      "name": "lang",
      "type": "(string & {}) | Lang"
    },
    {
      "comment": {
        "raw": "/**\n * The theme to use.\n *\n * @defaultValue\n *\n * 'github'\n */",
        "summary": "<p>The theme to use.</p>\n",
        "defaultValue": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#A78BFA\">'github'</span></span></code></pre>"
      },
      "name": "theme",
      "type": "Theme"
    },
    {
      "comment": {
        "raw": "/**\n * If true, a button will be displayed to copy the code to the clipboard.\n *\n * @defaultValue\n *\n * true\n */",
        "summary": "<p>If true, a button will be displayed to copy the code to the clipboard.</p>\n",
        "defaultValue": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#F8D2C9\">true</span></span></code></pre>"
      },
      "name": "copyButton",
      "type": "boolean"
    },
    {
      "comment": {
        "raw": "/**\n * If true, the code block will be collapsed by default.\n */",
        "summary": "<p>If true, the code block will be collapsed by default.</p>\n"
      },
      "name": "collapsed",
      "type": "boolean"
    }
  ],
  "events": [],
  "slots": [],
  "exports": []
}