{
  "type": "ts",
  "fileName": "visibility.ts",
  "filePath": "src/lib/actions/visibility.ts",
  "exports": [
    {
      "name": "Event",
      "type": "Event",
      "isDefaultExport": false
    },
    {
      "name": "Position",
      "type": "Position",
      "isDefaultExport": false
    },
    {
      "name": "Direction",
      "type": "Direction",
      "isDefaultExport": false
    },
    {
      "name": "ScrollDirection",
      "type": "ScrollDirection",
      "isDefaultExport": false
    },
    {
      "name": "VisibilityEventDetail",
      "type": "VisibilityEventDetail",
      "isDefaultExport": false
    },
    {
      "name": "VisibilityEvent",
      "type": "VisibilityEvent",
      "isDefaultExport": false
    },
    {
      "name": "VisibilityAttr",
      "type": "VisibilityAttr",
      "isDefaultExport": false
    },
    {
      "name": "VisibilityOptions",
      "type": "VisibilityOptions",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Optional config for `visibility` action.\n */",
        "summary": "<p>Optional config for <code>visibility</code> action.</p>\n"
      }
    },
    {
      "name": "visibility",
      "type": "Action<HTMLElement, VisibilityOptions, VisibilityAttr>",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Observes an element's current viewport visibility and dispatches relevant events.\n *\n * Events: - on:change - Triggered when element enters or leaves view. - on:enter - Triggered when element enters view. - on:exit - Triggered when element exits view.\n *\n * @param options - Optional config, see {@link VisibilityOptions}.\n *\n * @example\n * ```svelte\n * <script>\n * \tlet visible, scrollDir, options = {threshold: 0.25}\n *\n * \t// TypeScript users can import the VisibilityEvent or VisibilityEventDetail type\n * \tfunction handleChange({ detail }) {\n * \t\tvisible = detail.isVisible\n * \t\tscrollDir = detail.scrollDirection\n * \t}\n * </script>\n *\n * <div\n * \tuse:visibility={options}\n * \ton:v-change={handleChange}\n * \ton:v-enter={doSomething}\n * \ton:v-exit={doSomethingElse}\n * \tclass:visible\n * >\n * \t{scrollDir}\n * </div>\n *\n * ```\n *\n */",
        "links": [
          {
            "target": "VisibilityOptions",
            "text": "VisibilityOptions"
          }
        ],
        "summary": "<p>Observes an element&#39;s current viewport visibility and dispatches relevant events.</p>\n<p>Events:</p>\n<ul>\n<li>on:change - Triggered when element enters or leaves view.</li>\n<li>on:enter - Triggered when element enters view.</li>\n<li>on:exit - Triggered when element exits view.</li>\n</ul>\n",
        "params": [
          {
            "name": "options",
            "description": "Optional config, see{@linkVisibilityOptions}."
          }
        ],
        "examples": [
          {
            "content": "```svelte\n<script>\n\tlet visible, scrollDir, options = {threshold: 0.25}\n\n\t// TypeScript users can import the VisibilityEvent or VisibilityEventDetail type\n\tfunction handleChange({ detail }) {\n\t\tvisible = detail.isVisible\n\t\tscrollDir = detail.scrollDirection\n\t}\n</script>\n\n<div\n\tuse:visibility={options}\n\ton:v-change={handleChange}\n\ton:v-enter={doSomething}\n\ton:v-exit={doSomethingElse}\n\tclass:visible\n>\n\t{scrollDir}\n</div>\n\n```",
            "blocks": [
              {
                "type": "code",
                "content": "<pre class=\"shiki serendipity\" style=\"background-color:#0000;color:#d4d4d4\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#777D8F\">&#x3C;script></span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    let</span><span style=\"color:#DEE0EF\"> visible</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#DEE0EF\"> scrollDir</span><span style=\"color:#8D8F9E\">,</span><span style=\"color:#DEE0EF\"> options</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#8D8F9E\"> {</span><span style=\"color:#777D8F\">threshold</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#F8D2C9\"> 0.25</span><span style=\"color:#8D8F9E\">}</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#8D8F9E;font-style:italic\">    //</span><span style=\"color:#6B6D7C;font-style:italic\"> TypeScript users can import the VisibilityEvent or VisibilityEventDetail type</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    function</span><span style=\"color:#F8D2C9\"> handleChange</span><span style=\"color:#8D8F9E\">({</span><span style=\"color:#9CCFD8\"> detail</span><span style=\"color:#8D8F9E\"> })</span><span style=\"color:#8D8F9E\"> {</span></span>\n<span class=\"line\"><span style=\"color:#DEE0EF\">        visible</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#DEE0EF\"> detail</span><span style=\"color:#5BA2D0\">.</span><span style=\"color:#DEE0EF\">isVisible</span></span>\n<span class=\"line\"><span style=\"color:#DEE0EF\">        scrollDir</span><span style=\"color:#5BA2D0\"> =</span><span style=\"color:#DEE0EF\"> detail</span><span style=\"color:#5BA2D0\">.</span><span style=\"color:#DEE0EF\">scrollDirection</span></span>\n<span class=\"line\"><span style=\"color:#8D8F9E\">    }</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">&#x3C;/script></span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color:#777D8F\">&#x3C;div</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    use</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#DEE0EF\">visibility</span><span style=\"color:#777D8F\">=</span><span style=\"color:#8D8F9E\">{</span><span style=\"color:#DEE0EF\">options</span><span style=\"color:#8D8F9E\">}</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    on</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#94B8FF\">v-change</span><span style=\"color:#777D8F\">=</span><span style=\"color:#8D8F9E\">{</span><span style=\"color:#DEE0EF\">handleChange</span><span style=\"color:#8D8F9E\">}</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    on</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#94B8FF\">v-enter</span><span style=\"color:#777D8F\">=</span><span style=\"color:#8D8F9E\">{</span><span style=\"color:#DEE0EF\">doSomething</span><span style=\"color:#8D8F9E\">}</span></span>\n<span class=\"line\"><span style=\"color:#5BA2D0\">    on</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#94B8FF\">v-exit</span><span style=\"color:#777D8F\">=</span><span style=\"color:#8D8F9E\">{</span><span style=\"color:#DEE0EF\">doSomethingElse</span><span style=\"color:#8D8F9E\">}</span></span>\n<span class=\"line\"><span style=\"color:#9CCFD8;font-style:italic\">    class</span><span style=\"color:#8D8F9E\">:</span><span style=\"color:#9CCFD8\">visible</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">></span></span>\n<span class=\"line\"><span style=\"color:#8D8F9E\">    {</span><span style=\"color:#DEE0EF\">scrollDir</span><span style=\"color:#8D8F9E\">}</span></span>\n<span class=\"line\"><span style=\"color:#777D8F\">&#x3C;/div></span></span>\n<span class=\"line\"></span></code></pre>",
                "lang": "svelte",
                "raw": "<script>\n    let visible, scrollDir, options = {threshold: 0.25}\n\n    // TypeScript users can import the VisibilityEvent or VisibilityEventDetail type\n    function handleChange({ detail }) {\n        visible = detail.isVisible\n        scrollDir = detail.scrollDirection\n    }\n</script>\n\n<div\n    use:visibility={options}\n    on:v-change={handleChange}\n    on:v-enter={doSomething}\n    on:v-exit={doSomethingElse}\n    class:visible\n>\n    {scrollDir}\n</div>\n",
                "title": ""
              }
            ]
          }
        ]
      }
    }
  ]
}