{
  "type": "ts",
  "fileName": "partition.ts",
  "filePath": "src/lib/utils/partition.ts",
  "exports": [
    {
      "name": "partition",
      "type": "typeof partition",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Partitions an array into two arrays based on a predicate. The second argument is a callback that takes an element from the array and returns a boolean. - If it returns true, the element will be placed in the first array. - If it returns false, the element will be placed in the second array.\n *\n * @example\n * ```ts\n * const [even, odd] = partition([1, 2, 3, 4, 5], (n) => n % 2 === 0)\n *\n * console.log(even) // [2, 4]\n * console.log(odd) // [1, 3, 5]\n * ```\n *\n */",
        "summary": "Partitions an array into two arrays based on a predicate. The second argument\nis a callback that takes an element from the array and returns a boolean.\n- If it returns true, the element will be placed in the first array.\n- If it returns false, the element will be placed in the second array.",
        "examples": [
          {
            "content": "```ts\nconst [even, odd] = partition([1, 2, 3, 4, 5], (n) => n % 2 === 0)\n\nconsole.log(even) // [2, 4]\nconsole.log(odd) // [1, 3, 5]\n```"
          }
        ]
      }
    }
  ]
}