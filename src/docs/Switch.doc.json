{
  "fileName": "Switch.svelte",
  "filePath": "src/lib/components/Switch.svelte",
  "comment": {
    "raw": "/**\n * A native checkbox that looks like a switch.\n *\n * ## Style Props\n *\n * All style props should be raw CSS strings, including units.\n *\n * ### Color\n *\n * - `--switch-outline` - The outline color of the switch.\n *\n * - `--switch-primary` - The primary color of the switch, used for the thumb.\n *\n * - `--switch-secondary` - The secondary color of the switch, used for the slider.\n *\n * - `--switch-accent` - The accent color of the switch.\n *\n * ### Shape\n *\n * - `--switch-width` - The width of the switch.\n *\n * - `--switch-padding` - The padding of the switch.\n *\n * - `--switch-thumb-size` - The size of the switch thumb.\n *\n * - `--switch-thumb-ratio` - The ratio of the switch thumb's width to height.\n *\n * - `--switch-slider-radius` - The border-radius of the switch slider.\n *\n * - `--switch-thumb-radius` - The border-radius of the switch thumb.\n *\n * > Note: The switch is designed to have a fixed size for consistency. It's best placed within a passive container that softly wraps the input, such as one with a width set to 'fit-content'. If the switch is placed in a parent container that's too small, adjust the size of the switch using the `--switch-width` and `--switch-height` custom properties, or adjust the size of the parent container. The switch does not automatically adjust its size based on the parent container.\n *\n * ## Examples\n *\n * @example\n *\n * Basic\n * ```html\n * <script>\n * import Switch from '$lib/components/Switch.svelte';\n * let checked = false;\n * $: console.log(checked ? 'on' : 'off');\n * </script>\n *\n * <Switch bind:checked />\n * ```\n *\n * @example\n *\n * Theme Switcher\n * ```html\n * <script>\n * import { theme, toggleTheme } from 'fractils'\n * import Switch from '$lib/components/Switch.svelte';\n * </script>\n *\n * <Switch\n * on=\"ðŸŒž\"\n * off=\"ðŸŒ™\"\n * title=\"theme switcher\"\n * checked={$theme === 'dark'}\n * on:click={toggleTheme}\n * --switch-accent=\"var(--bg-d)\"\n * />\n * ```\n *\n */\n",
    "summary": "A native checkbox that looks like a switch.\n\n## Style Props\n\nAll style props should be raw CSS strings, including units.\n\n### Color\n\n- `--switch-outline` - The outline color of the switch.\n\n- `--switch-primary` - The primary color of the switch, used for the thumb.\n\n- `--switch-secondary` - The secondary color of the switch, used for the slider.\n\n- `--switch-accent` - The accent color of the switch.\n\n### Shape\n\n- `--switch-width` - The width of the switch.\n\n- `--switch-padding` - The padding of the switch.\n\n- `--switch-thumb-size` - The size of the switch thumb.\n\n- `--switch-thumb-ratio` - The ratio of the switch thumb's width to height.\n\n- `--switch-slider-radius` - The border-radius of the switch slider.\n\n- `--switch-thumb-radius` - The border-radius of the switch thumb.\n\n> Note: The switch is designed to have a fixed size for consistency. It's best placed within a passive container that softly wraps the input, such as one with a width set to 'fit-content'. If the switch is placed in a parent container that's too small, adjust the size of the switch using the `--switch-width` and `--switch-height` custom properties, or adjust the size of the parent container. The switch does not automatically adjust its size based on the parent container.\n\n## Examples\n\n",
    "examples": [
      {
        "name": "Basic",
        "content": "\n```html\n<script>\nimport Switch from '$lib/components/Switch.svelte';\nlet checked = false;\n$: console.log(checked ? 'on' : 'off');\n</script>\n\n<Switch bind:checked />\n```\n\n"
      },
      {
        "name": "Theme Switcher",
        "content": "\n```html\n<script>\nimport { theme, toggleTheme } from 'fractils'\nimport Switch from '$lib/components/Switch.svelte';\n</script>\n\n<Switch\non=\"ðŸŒž\"\noff=\"ðŸŒ™\"\ntitle=\"theme switcher\"\nchecked={$theme === 'dark'}\non:click={toggleTheme}\n--switch-accent=\"var(--bg-d)\"\n/>\n```\n"
      }
    ]
  },
  "componentName": "Switch",
  "props": [
    {
      "comment": {
        "raw": "/**\n * The content to display when the switch is on.\n */\n",
        "summary": "The content to display when the switch is on.\n"
      },
      "name": "on",
      "type": "string"
    },
    {
      "comment": {
        "raw": "/**\n * The content to display when the switch is off.\n */\n",
        "summary": "The content to display when the switch is off.\n"
      },
      "name": "off",
      "type": "string"
    },
    {
      "comment": {
        "raw": "/**\n * Visible to screen readers / tooltips.\n */\n",
        "summary": "Visible to screen readers / tooltips.\n"
      },
      "name": "title",
      "type": "string"
    },
    {
      "comment": {
        "raw": "/**\n * Whether the switch is checked or not.\n */\n",
        "summary": "Whether the switch is checked or not.\n"
      },
      "name": "checked",
      "type": "boolean"
    }
  ],
  "events": [
    {
      "comment": {
        "raw": "/**\n * Toggles the switch.\n */\n",
        "summary": "Toggles the switch.\n"
      },
      "name": "click",
      "type": "MouseEvent"
    }
  ],
  "slots": [],
  "exports": []
}