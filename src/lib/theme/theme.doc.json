{
  "file": "src/lib/theme/theme.ts",
  "fileType": "ts",
  "variables": [
    {
      "name": "theme",
      "file": "src/lib/theme/theme.ts",
      "raw": "/**\n * A store for the current theme persisted in local storage.\n */\n",
      "summary": "A store for the current theme persisted in local storage.",
      "type": "Writable<Theme>"
    },
    {
      "name": "initTheme",
      "file": "src/lib/theme/theme.ts",
      "raw": "/**\n * Applies system preference theme and registers a listener for changes.\n */\n",
      "summary": "Applies system preference theme and registers a listener for changes.",
      "type": "() => Promise<void>"
    },
    {
      "name": "toggleTheme",
      "file": "src/lib/theme/theme.ts",
      "raw": "/**\n * Toggles {@link theme} to and from light / dark mode\n */\n",
      "summary": "Toggles {@link theme} to and from light / dark mode",
      "type": "Writable<Theme>"
    },
    {
      "name": "applyTheme",
      "file": "src/lib/theme/theme.ts",
      "raw": "/**\n * Applies a specific theme\n *\n * @param newTheme - The theme to apply\n */\n",
      "summary": "Applies a specific theme",
      "params": [
        {
          "name": "newTheme",
          "description": "The theme to apply"
        }
      ],
      "type": "(newTheme: Theme) => void"
    }
  ],
  "types": []
}