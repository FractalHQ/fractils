//· Variables ································································¬
// Default Font
//! todo - change to self hosted font or uncomment.
// @import url('https://fonts.googleapis.com/css2?family=Kodchasan:ital,wght@0,200;0,300;0,400;0,500;0,600;0,700;1,200;1,300;1,400;1,500;1,600;1,700&display=swap');

// Generic Globals
.fracgui-root {
	color-scheme: light dark;
	--fracgui-width: 30rem;
	--fracgui-min-width: 25rem;
	--fracgui-max-width: 35rem;
	--fracgui-font: var(--font-d);

	--fracgui-root-header-font-size: var(--font-xs);
	--fracgui-root-header-font-weight: 500;
	--fracgui-root-header-height: 1.75rem;
	--fracgui-root-header-letter-spacing: 0.125rem;
	--header-height: 1.75rem;

	--fracgui-input-height: 2rem;
	--fracgui-input-section-1-width: clamp(6rem, 30%, 12rem);
	--fracgui-input-section-2-width: 4rem;
	--fracgui-input-section-3-width: 100%;

	--fracgui-alpha: 0.75;
	--fracgui-blur: 0.5rem;
}
.fracgui-root[mode='dark'] {
	color-scheme: dark;
	--shadow-lightness: 1;
}
.fracgui-root[mode='light'] {
	color-scheme: light;
	--shadow-lightness: 0.2;
}

.fracgui-root,
.fracgui-root[theme='default'],
.fracgui-root[theme='minimal'] {
	//* Root Folder

	// --fracgui-root-content-background: rgba(var(--bg-b-rgb), 0.2);
	--fracgui-root-content-background: rgba(var(--bg-b-rgb), 0.3);
	--fracgui-root-shadow: 0 0 1.5px 0.5px rgba(var(--bg-d-rgb), 0.5) inset;

	//* Folders
	--fracgui-folder-background: rgba(var(--bg-b-rgb), 0.5);

	//? Folder Header
	--fracgui-folder-header-padding-left: 0.25rem;

	--fracgui-folder-header-color: var(--fg-c);
	--fracgui-folder-header-color-dim: var(--fg-d);
	--fracgui-folder-header-background: var(--bg-a);
	--fracgui-folder-header-outline: none;
	--fracgui-folder-header-border-radius: var(--radius-sm);
	--fracgui-folder-header-box-shadow: none;

	--fracgui-folder-header-font-size: var(--font-sm);
	--fracgui-folder-header-font-weight: 350;
	--fracgui-folder-header-letter-spacing: 0.75px;

	//? Folder Content
	--fracgui-folder-content-background: rgba(var(--bg-b-rgb), 0.2);
	--fracgui-folder-content-padding-left: 0.33rem;
	--fracgui-folder-content-font-size: var(--font-xs);
	--fracgui-folder-content-font-weight: 350;
	--fracgui-folder-content-letter-spacing: 0.5px;

	//* Input Containers

	--fracgui-input-container-color: var(--fg-d);
	--fracgui-input-container-color-dim: var(--fg-e);
	--fracgui-input-container-background: rgba(var(--bg-a-rgb), 0.5);
	--fracgui-input-container-outline: 1px solid rgba(var(--bg-a-rgb), 0.2);
	// prettier-ignore
	--fracgui-input-container-shadow:
		-0.15px 0.1px 1px hsla(220, 10%, 2%, calc(0.2 * var(--shadow-lightness))) inset,
		-2px 2px 15px hsla(220, 10%, 2%, calc(0.075 * var(--shadow-lightness))) inset,
		-3.0px 3px 25px hsla(220, 10%, 2%, calc(0.05 * var(--shadow-lightness))) inset,
		-10.0px 10px 50px hsla(220, 10%, 2%, calc(0.025 * var(--shadow-lightness))) inset
	;
	--fracgui-drawer-toggle-background: rgba(var(--bg-a-rgb), 0.5);

	//* Input Content

	--fracgui-input-background: rgba(var(--bg-c-rgb), 1);
	--fracgui-input-background-dim: rgba(var(--bg-c-rgb), 0.75);
	--fracgui-input-color: var(--fg-d);
	--fracgui-input-shadow: var(--shadow-xs);
	--fracgui-input-outline: 1px solid rgba(var(--bg-d-rgb), 0.4);
	--fracgui-input-background-image: none;

	//* Number Input

	//? Number Input Buttons
	--fracgui-input-buttons-background: rgba(var(--bg-b-rgb), var(--fracgui-alpha));
	--fracgui-input-buttons-color: var(--fg-b);
	--fracgui-input-buttons-icon-color: var(--fg-d);
	--fracgui-input-buttons-icon-color-active: var(--theme-a);
	--fracgui-input-number-buttons-shadow-inset-hover: 0px 0px 1px 0px hsl(0, 0%, 0%) inset;
	--fracgui-input-number-buttons-shadow-inset-active: 0px 0px 1px 1px hsl(0, 0%, 5%) inset;
	--fracgui-input-number-font-size: var(--font-xs);

	//* Range Input

	--fracgui-input-number-range-color: var(--bg-c);
	--fracgui-input-number-range-color-active: var(--theme-a);
	--fracgui-input-number-range-background: var(--bg-a);
	--fracgui-input-number-range-outline: 1px solid rgba(var(--bg-c-rgb), 0.25);
	// prettier-ignore
	--fracgui-input-number-range-shadow: 
		-2px 2px 2.5px hsla(230, 20%, 0%, 0.2),
		2px 2px 5px hsla(230, 20%, 0%, 0.2),
		2px 3px 10px hsla(230, 20%, 0%, 0.2),
		2px 4px 4px hsla(230, 25%, 0%, 0.2)
	;
}

.fracgui-root[mode='light'] {
	// --fracgui-input-number-buttons-shadow-inset: 0px 0px 1.5px 0px hsl(0, 0%, 75%) inset;
	--fracgui-input-number-buttons-shadow-inset-hover: 0px 0px 1px 0px hsl(0, 0%, 80%) inset;
	--fracgui-input-number-buttons-shadow-inset-active: 0px 0px 2px 1px hsl(0, 0%, 90%) inset;

	--fracgui-input-background-dim: rgba(var(--bg-a-rgb), 0.5);
	--fracgui-input-background: rgba(var(--bg-a-rgb), 1);
	--fracgui-input-color: var(--fg-c);
	--fracgui-input-outline: 1px solid rgba(var(--bg-d-rgb), 0.1);

	--fracgui-input-number-range-background: var(--bg-b);
	--fracgui-input-number-range-color: var(--bg-d);

	// prettier-ignore
	--fracgui-input-number-range-shadow: 
		-2px 2px 2px hsla(230, 20%, 30%, 0.1),
		2px 2px 3px hsla(230, 20%, 20%, 0.1),
		2px 2px 7px hsla(230, 20%, 30%, 0.1)
	;
}

// todo/wip - neumorphic stuff is unused
.fracgui-root[theme='soft'] {
	--gradient-neumorphic-a: linear-gradient(
		145deg,
		hsla(230, 20%, 12.5%, 0.5),
		hsla(230, 20%, 5%, 0.66)
	);
	// prettier-ignore
	--shadow-neumorphic-a:
		-4px -2px 5px hsla(230, 20%, 23%, 0.3),
	2px 2px 10px hsla(230, 20%, 5%, 0.66),
	2px 2px 15px hsla(230, 20%, 5%, 0.66),
	-2px -2px 15px hsla(230, 25%, 21%, 0.3)
	;
	// prettier-ignore
	--shadow-neumorphic-b: 0 0 5px 0.5px hsla(0, 0%, 0%, 0.5),
	1px 1px 5px 0.5px hsla(0, 0%, 0%, 0.33),
	0 0 5px 0.5px hsla(0, 0%, 0%, 0.5) inset,
	-2px -2px 3px 0.5px hsla(230, 20%, 25%, 0.5),
	-2px -2px 10px 0px hsla(230, 20%, 15%, 0.75),
	2px 2px 3px 0px hsla(231, 17%, 23%, 0.5) inset
	;
}
//⌟

//· Stacking Context ···································································¬

.fracgui-root {
	z-index: 0;
}

.fracgui-header {
	z-index: 2;
}

.fracgui-toolbar {
	z-index: 3;
}
//⌟

//· Open / Close Animations ··················································¬

.fracgui-root,
.fracgui-folder {
	.fracgui-content-wrapper {
		display: grid;
		grid-template-rows: 1fr;

		animation-name: open;
		animation-duration: 0.5s;
		animation-direction: forwards;
		animation-timing-function: cubic-bezier(0.1, 1, 0.1, 1);
	}
	.fracgui-header {
		height: var(--header-height);
		max-height: var(--header-height);
	}

	&.closed {
		.fracgui-content-wrapper {
			animation-name: close;
			animation-duration: 0.5s;
			animation-fill-mode: forwards;
			animation-timing-function: cubic-bezier(0.05, 1, 0.2, 1);
		}

		.fracgui-folder .fracgui-header {
			max-height: 0;
		}
	}

	&.instant {
		.fracgui-content-wrapper {
			grid-template-rows: 1fr;
			animation: none;
		}

		.fracgui-folder .fracgui-header {
			height: var(--header-height);
			max-height: var(--header-height);
		}
	}
}

.fracgui-root.closed .fracgui-content {
	transition: opacity 0.1s;
	transition-delay: 0.1s;
	opacity: 0 !important;

	&.instant {
		transition: none;
	}
}

.fracgui-root,
.fracgui-folder {
	&.animating,
	&.closed {
		.fracgui-content {
			overflow: hidden;
			// We need to hide the scrollbar thumb _during_
			// the animation or the browser will jank it up.
			&::-webkit-scrollbar-thumb {
				background: transparent !important;
			}
			@-moz-document url-prefix() {
				& {
					scrollbar-color: transparent transparent;
				}
			}
		}
	}
}

@keyframes reveal {
	from {
		grid-template-rows: 0fr;
	}
	to {
		grid-template-rows: 1fr;
	}
}

@keyframes open {
	from {
		grid-template-rows: 0fr;
	}
	to {
		grid-template-rows: 1fr;
	}
}

@keyframes close {
	from {
		grid-template-rows: 1fr;
	}
	to {
		grid-template-rows: 0fr;
	}
}

//⌟

//· Gui Root ·································································¬

.fracgui-root {
	position: absolute;
	display: flex;
	flex-direction: column;
	inset: 0;

	width: var(--fracgui-width);
	min-width: var(--fracgui-min-width, 20rem);
	max-width: var(--fracgui-max-width);

	height: fit-content; //- important
	max-height: var(--max-height, 90dvh);

	border-radius: var(--radius-md);

	user-select: none;
	z-index: 99;
}

.fracgui-root > .fracgui-header {
	position: relative;

	display: flex;
	align-items: center;
	justify-content: space-around;
	gap: 0.5rem;

	width: 100%;
	min-height: var(--fracgui-root-header-height);

	color: var(--fg-c);
	background: var(--bg-a);
	border-radius: var(--radius-md);
	border-bottom-left-radius: var(--radius-xs);
	border-bottom-right-radius: var(--radius-xs);
	box-shadow: var(--fracgui-root-shadow);

	cursor: pointer;
	cursor: grab;

	.fracgui-title {
		width: fit-content;
		height: var(--header-height);

		font-family: var(--fracgui-font);
		font-size: var(--fracgui-root-header-font-size);
		font-weight: var(--fracgui-root-header-font-weight);
		font-variation-settings:
			'wght' var(--fracgui-root-header-font-weight),
			'wdth' 100;
		letter-spacing: var(--fracgui-root-header-letter-spacing);
		line-height: var(--header-height);

		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;

		pointer-events: none;
	}
}

.fracgui-root > .fracgui-content-wrapper > .fracgui-content {
	display: flex;
	flex-direction: column;

	width: 100%;
	margin: 0;

	border-radius: var(--radius-md);
	border-top-left-radius: var(--radius-sm);
	border-top-right-radius: var(--radius-sm);
	background: var(--fracgui-root-content-background);
	backdrop-filter: blur(var(--fracgui-blur));
	outline-offset: -1px;

	box-shadow: 0 0 1.5px 0.5px rgba(var(--bg-d-rgb), 0.5) inset;

	overflow-y: scroll;
	overflow-x: hidden;

	scrollbar-gutter: stable;
	@-moz-document url-prefix() {
		& {
			scrollbar-color: var(--bg-b) var(--bg-a);
			scrollbar-width: thin;
			scrollbar-gutter: auto;
		}
	}

	@mixin scrollbar {
		width: 5px;
		height: 0px;
	}
	&::-webkit-scrollbar {
		@include scrollbar;
	}
	&::-moz-scrollbar {
		@include scrollbar;
	}

	@mixin scrollbarThumb {
		background: var(--fracgui-input-background);
		border: none;
	}
	&::-webkit-scrollbar-thumb {
		@include scrollbarThumb;
	}
	&::-moz-scrollbar-thumb {
		@include scrollbarThumb;
	}

	@mixin scrollbarTrack {
		background: var(--fracgui-folder-header-background);
		border-bottom-right-radius: var(--radius-sm);
	}
	&::-webkit-scrollbar-track {
		@include scrollbarTrack;
	}
	&::-moz-scrollbar-track {
		@include scrollbarTrack;
	}
}

.fracgui-root.animating > .fracgui-content-wrapper > .fracgui-content {
	@-moz-document url-prefix() {
		& {
			overflow: hidden;
		}
	}
}

.fracgui-root > .fracgui-content-wrapper > .fracgui-folder {
	// display: flex;
	padding-right: 0.25rem;
	background: #15161d;
}
//⌟

//· Gui Folders ······························································¬

.fracgui-folder {
	height: fit-content;
	background: var(--fracgui-folder-background);
}

.fracgui-folder .fracgui-header {
	position: relative;

	display: flex;
	align-items: center;
	gap: 0.5rem;

	width: 100%;
	padding-left: var(--fracgui-folder-header-padding-left);

	color: var(--fracgui-folder-header-color-dim);
	background: var(--fracgui-folder-header-background);
	outline: var(--fracgui-folder-header-outline, 1px solid rgba(var(--bg-b-rgb), 0.5));
	outline-offset: -1px;
	// border-radius: var(--fracgui-folder-header-border-radius, var(--radius-sm));
	// border-bottom-left-radius: 0;
	box-shadow: var(--fracgui-folder-header-box-shadow, 0 0 0.1rem #000 inset);

	transition: 0.15s;
	cursor: pointer;

	.fracgui-title {
		width: fit-content;

		font-family: var(--fracgui-font);
		font-size: var(--fracgui-folder-header-font-size);
		font-weight: var(--fracgui-folder-header-font-weight);
		letter-spacing: var(--fracgui-folder-header-letter-spacing);
		font-variation-settings:
			'wght' var(--fracgui-folder-header-font-weight),
			'wdth' 100;

		transition: 0.15s;
	}

	.icon-folder-container {
		width: 1.1rem !important;
		height: 1.1rem !important;

		color: var(--fg-c);

		opacity: 0.75;
		transition: opacity 0.15s;
	}

	&:hover svg.icon-folder {
		opacity: 1;
	}
}

.fracgui-folder {
	.fracgui-content {
		display: flex;
		flex-direction: column;

		width: 100%;
		background: var(--fracgui-folder-content-background, var(--fracgui-folder-background));
		border-left: var(--fracgui-folder-content-padding-left) solid
			var(--fracgui-folder-header-background);

		transition: 0.15s;
	}
}

.fracgui-folder:hover:not(.fracgui-root) {
	> .fracgui-header {
		color: var(--fracgui-folder-header-color);
		// .fracgui-title {
		// 	font-variation-settings:
		// 		'wght' calc(var(--fracgui-folder-header-font-weight) + 20),
		// 		'wdth' 104;
		// }
	}
	> .fracgui-content {
		opacity: 1;
	}
}

// .fracgui-root > .fracgui-content-wrapper > .fracgui-content > .fracgui-folder {
// 	contain: content;
// }
//⌟

//· Controllers ······························································¬

.fracgui-controller {
	width: 100%;

	color: var(--fracgui-controller-color-dim);
	background: var(--fracgui-controller-background-dim);
	box-shadow: var(--fracgui-controller-shadow);
	border-radius: var(--fracgui-controller-radius);
	outline: var(--fracgui-input-outline);

	&:hover,
	&:focus-visible,
	&:active {
		opacity: 1;
		color: var(--fracgui-controller-color);
		background: var(--fracgui-controller-background);
	}

	transition: 0.15s;
}

//·· Select ························································¬

$option-height: 1.5rem;
$option-padding: 0.1rem 0.75rem;

.fracgui-controller-select-container {
	position: relative;
}

.fracgui-controller-select-selected {
	border-radius: var(--radius-xs);
	outline: 1px solid rgba(var(--bg-d-rgb), 0);

	text-align: center;
	font-family: var(--fracgui-font);
	font-size: var(--fracgui-folder-content-font-size);
	font-weight: var(--fracgui-folder-content-font-weight);
	letter-spacing: var(--fracgui-folder-content-letter-spacing);

	overflow: hidden;
	transition: 0.15s;
	cursor: pointer;

	&.active,
	&:hover,
	&:focus-visible,
	&:active {
		filter: contrast(1.1) brightness(1.25);
		outline-offset: 0.25rem;
		outline: 1px solid rgba(var(--bg-d-rgb), 0.5);
	}

	&.active {
		outline: var(--fracgui-input-outline);
	}
}

.fracgui-controller-select-dropdown {
	display: none;

	position: absolute;
	display: flex;
	flex-direction: column;

	width: 0px;
	height: 0px;
	padding: 0;
	margin: 0;

	background: var(--bg-a);
	border-radius: var(--radius);
	box-shadow:
		0px 0.3px 0.3px hsl(var(--shadow-lightness) / 0.49),
		-0.1px 2.1px 2.2px -0.6px hsl(var(--shadow-lightness) / 0.47),
		-0.2px 4.6px 4.9px -1.2px hsl(var(--shadow-lightness) / 0.45),
		-0.4px 9.2px 9.8px -1.7px hsl(var(--shadow-lightness) / 0.42),
		-0.7px 17.4px 18.5px -2.3px hsl(var(--shadow-lightness) / 0.4),
		-1.2px 30.6px 32.6px -2.9px hsl(var(--shadow-lightness) / 0.38);

	z-index: 100;
	transition:
		all 0.2s cubic-bezier(0.23, 1, 0.32, 1),
		inset 0s;

	opacity: 0;
	pointer-events: none;
	transform: translate(0, 0) scaleY(0);
	transform-origin: top center;

	&.expanded {
		display: block;
		width: fit-content;
		height: fit-content;
		padding: 0.1rem;
		opacity: 1;
		transform: translate(0, 0.5rem) scaleY(1);
	}
}

.fracgui-controller-select-option {
	padding: $option-padding;
	line-height: $option-height;

	font-family: var(--fracgui-font, var(--font-d));
	font-size: 0.8rem;
	letter-spacing: 0.5px;
	color: var(--fg-d);

	transition: 0.15s;
	outline: 1px solid rgba(var(--bg-d-rgb), 0);

	&:hover,
	&:focus-visible {
		background: var(--bg-c);
		filter: contrast(1.1) brightness(1.25);
		outline: 1px solid rgba(var(--bg-d-rgb), 1);
		color: var(--fg-a);
	}

	cursor: pointer;

	&:first-of-type {
		border-top-left-radius: var(--radius-sm);
		border-top-right-radius: var(--radius-sm);
	}

	&:last-of-type {
		border-bottom-left-radius: var(--radius-sm);
		border-bottom-right-radius: var(--radius-sm);
	}
}
//⌟
//⌟

//· Toolbar ···································································¬

.fracgui-toolbar {
	contain: paint;

	position: absolute;
	right: 0;
	top: 0;
	bottom: 0;

	display: flex;
	align-items: center;
	justify-content: flex-end;
	gap: 0.5rem;

	width: 75%;
}
//⌟

//·· Search ························································¬

//? Container

.fracgui-search-container {
	display: flex;
	align-items: center;
	justify-content: flex-end;
	gap: 0.25rem;

	padding: 0.25rem 0.1rem 0.25rem 0;

	cursor: pointer;
	transition: 0.15s;
	backface-visibility: hidden;
}

//? Button

.fracgui-search-button {
	all: unset;

	display: flex;
	align-items: center;

	width: 1.5rem;
	height: 0.9rem;

	transition: 0.15s;

	svg {
		pointer-events: none;
		transition-duration: 0.15s !important;

		path {
			transform: translate(0, 0) scale(1);
			transform-origin: 50% 50%;
			transition-duration: 0.15s !important;
		}

		circle {
			fill: transparent;
			transform: translate(0, 0) scale(1);
			transition-duration: 0.15s !important;
		}
	}
}

//- Hover

.fracgui-search-button {
	color: var(--bg-d);
	opacity: 0;
}
.fracgui-header:hover .fracgui-search-button {
	transition-duration: 0.5s;
	opacity: 0.5;
}
.fracgui-search-button:hover {
	transition-duration: 0.25s;
	color: var(--fg-e);
	opacity: 1;
}
.fracgui-search-button:active {
	transition-duration: 0.05s;

	background: transparent;
	color: var(--fg-d);
	opacity: 1;

	scale: 0.9;
}

//- Active

.fracgui-search-container.active .fracgui-search-button {
	color: var(--bg-e);
	opacity: 1;

	path {
		transform: translate(-10%, 10%) scale(0);
		transform-origin: 60% 60%;
	}

	circle {
		fill: var(--bg-e);
		transform: translate(-10%, 20%) scale(0.75);
	}
}

//? Input

input.fracgui-search-input {
	width: 6rem;
	height: 1rem;
	padding: 0 0.25rem;

	color: var(--fg-c);
	background: var(--bg-b);
	border-radius: var(--radius-sm);
	box-shadow: 0 0 11px #0004 inset;
	outline: none;
	border: none;

	font-size: var(--font-xxs);
	font-family: var(--fracgui-font);
	caret-color: var(--bg-e);
	caret-shape: block;
	line-height: 4px !important;

	transition-timing-function: cubic-bezier(0.23, 1, 0.32, 1);

	@at-root .fracgui-root[mode='light'] & {
		box-shadow: 0 0 4px #0001 inset;
	}
}

//- Active

.fracgui-search-input {
	max-width: 0rem;
	opacity: 0;
	pointer-events: none;
	transition-duration: 1s;
}
.fracgui-search-container.active .fracgui-search-input {
	max-width: 6rem;
	opacity: 1;
	pointer-events: all;
	transition-duration: 0.33s;
}
//⌟

//· Shared ···································································¬

//·· Copy ··························································¬

.fracgui-folder {
	.copy-button {
		cursor: pointer;

		width: var(--copy-button-width, 2rem);
		height: var(--copy-button-height, 2rem);
		padding: 10%;

		color: var(--fg-a);
		background: rgba(var(--bg-a-rgb), 0);
		outline: 1px solid transparent;
		border-radius: 0.2rem;
		backdrop-filter: blur(0px);

		transition-property: all, background, color;
		transition-delay: 0s, 1s, 0.75s;
		transition-duration: 0.25s, 0.5s;

		&:not(.active, .outro) {
			&:hover {
				color: var(--fg-b);
				backdrop-filter: blur(2px);
				background: rgba(var(--bg-a-rgb), 0.75);

				transition-duration: 0.15s, 0.25s;
				transition-delay: 0s;
			}

			&:active,
			&:focus {
				color: var(--fg-c);
				background: var(--bg-c);
			}
		}

		&.active,
		&.outro {
			color: var(--fg-a);
			outline-color: transparent !important;
			background: rgba(var(--bg-a-rgb), 0);
			opacity: 1 !important;

			transition-delay: 0s;
			transition-duration: 0.25s;
		}

		font-size: 0.8rem;
		font-family: var(--font-mono);
	}

	.copy-button-svg-container {
		align-items: center;
		justify-content: center;

		width: 100%;
		height: 100%;

		grid-area: 1/1;
	}

	$dur: 0.33s;
	$bounce: cubic-bezier(0.175, 0.885, 0.32, 1.275);
	$bounceXtreme: cubic-bezier(0.2, 2, 0.2, 0.85);
	$quintInOut: cubic-bezier(0.86, 0, 0.07, 1);
	$quartInOut: cubic-bezier(0.77, 0, 0.175, 1);
	svg {
		overflow: visible;

		width: 100%;
		height: 100%;

		.front,
		.back,
		.check {
			transform-origin: 50% 50%;
		}

		.front {
			transition-duration: 0.66s !important;
			transition-timing-function: $bounce;

			stroke: currentColor;
		}
		&.active .front {
			transition-timing-function: $bounceXtreme;
			transition-duration: 0.2s;

			transform: scale(2);
			fill: #12a084 !important;
			stroke: #12a084 !important;
		}

		&.outro .front {
			transition-duration: 0.5s !important;
		}

		.back {
			transform: translate(0, 0);
			transition-duration: $dur;
			transition-timing-function: $quartInOut;
		}
		&.active .back {
			transform: translate(15%, 15%);
		}

		&.outro .back {
			transition-delay: 0s !important;
			transition-duration: 1s !important;
		}

		.check {
			stroke: var(--color, var(--light-a));

			opacity: 0;

			transform: scale(0);

			transition: 0.2s $bounce 0s;
		}
		&.active .check {
			opacity: 1;
			transform: scale(1.25);

			transition: 0.3s $bounceXtreme 0.1s;
		}
	}
}
//⌟
//⌟

//· Inputs ···································································¬

.fracgui-folder {
	.fracgui-input-drawer-toggle {
		right: 0.5rem;
		top: 0.5rem;

		width: 0.5rem;
		height: 75%;

		color: var(--fg-c);
		background: var(--fracgui-drawer-toggle-background);
		transition: 0.15s;
		box-shadow: -1px 0 1px 0.5px rgba(var(--bg-a-rgb), 0.5) inset;

		border-top-right-radius: var(--radius-sm);
		border-bottom-right-radius: var(--radius-sm);

		cursor: pointer;

		&:hover {
			background: var(--bg-c);
		}
	}

	.fracgui-input-title {
		// outline: 1px solid hsla(120, 100%, 25%, 0.2); // debug-outline

		max-width: var(--fracgui-input-section-1-width);
		min-width: var(--fracgui-input-section-1-width);
		text-wrap: balance;
		padding-left: 0.5rem;

		font-family: var(--fracgui-font);
		font-size: var(--fracgui-folder-content-font-size);
		font-weight: var(--fracgui-folder-content-font-weight);
		letter-spacing: var(--fracgui-folder-content-letter-spacing);

		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;

		transition: 0.05s;
	}

	.fracgui-input-container {
		position: relative;
		display: flex;
		align-items: center;

		width: 100%;
		height: 0%;
		min-height: var(--fracgui-input-height);

		// color: var(--fracgui-input-container-color);
		// background: var(--fracgui-input-container-background);
		// todo - thought... if every customizable property assumes a default variable of the same name,
		// todo - then it would be much simpler to override at runtime in the themer / user options
		color: var(--color, var(--fracgui-input-container-color));
		background: var(--background, var(--fracgui-input-container-background));

		outline: var(--fracgui-input-container-outline);
		box-shadow: var(--fracgui-input-container-shadow);

		transition:
			all 0.15s,
			opacity 0.15s ease-in 0.2s;

		$inverted-border-size: 0.5rem;
		$inverted-border-radius: 0.2rem;
		$inverted-border-radius-bottom: 0.1rem;

		&:first-of-type {
			border-top-left-radius: var(--radius-sm);
			border-top-right-radius: var(--radius-sm);

			// top left corner
			&::before {
				content: '';
				position: absolute;
				background-color: transparent;
				bottom: $inverted-border-size * 2;
				width: $inverted-border-size;
				height: $inverted-border-size * 2;
				border-top-left-radius: $inverted-border-radius;
				box-shadow: 0 -#{$inverted-border-size} 0 0 var(--bg-a);

				clip-path: inset(0 0 0 0);
				opacity: 1;
				transition: inherit;
			}
			// top right corner
			&::after {
				content: '';
				position: absolute;
				background-color: transparent;
				right: 0;
				bottom: $inverted-border-size * 2;
				width: $inverted-border-size;
				min-height: $inverted-border-size * 2;
				border-top-right-radius: $inverted-border-radius;
				box-shadow: 0 -#{$inverted-border-size} 0 0 var(--bg-a);

				clip-path: inset(0 0 0 0);
				opacity: 1;
				transition: inherit;
			}
		}

		@at-root .fracgui-folder:not(:last-of-type) .fracgui-input-container:last-of-type {
			// &:last-of-type {
			border-bottom-left-radius: var(--radius-sm);
			border-bottom-right-radius: var(--radius-sm);

			// bottom left corner
			&::before {
				content: '';
				position: absolute;
				background-color: transparent;
				top: $inverted-border-size * 2;
				height: $inverted-border-size * 2;
				width: $inverted-border-size;
				border-bottom-left-radius: $inverted-border-radius-bottom;
				box-shadow: 0 $inverted-border-size 0 0 var(--bg-a);
			}
			// bottom right corner
			&::after {
				content: '';
				position: absolute;
				background-color: transparent;
				right: 0;
				top: $inverted-border-size * 2;
				height: $inverted-border-size * 2;
				width: $inverted-border-size;
				border-bottom-right-radius: $inverted-border-radius-bottom;
				box-shadow: 0 $inverted-border-size 0 0 var(--bg-a);
			}
		}

		&:hover {
			color: var(--fg-b);
		}

		&:has(input:active),
		&:has(.fracgui-controller:active) {
			.fracgui-input-number-input {
				opacity: 1;
				background: var(--fracgui-input-background);
			}

			.fracgui-input-title {
				color: var(--theme-a);
			}
		}

		&.fracgui-search-hit {
			min-height: var(--fracgui-input-height);

			.fracgui-input-title {
				color: var(--theme-a);
			}
		}

		&.fracgui-search-miss {
			min-height: 0rem;
			overflow: hidden;

			&::after {
				opacity: 0;
				transition: inherit;
			}
			&::before {
				opacity: 0;
				transition: inherit;
			}
		}

		&.expanded {
			.fracgui-input-container {
				min-height: unset;
			}
		}

		.fracgui-input-content {
			display: flex;
			align-items: center;
			justify-content: space-evenly;

			width: 100%;
			margin: 0;
			padding-right: 0.75rem;

			//? Number Input

			.fracgui-input-number-container {
				position: relative;

				display: flex;
				align-items: center;
				justify-content: space-between;
				gap: 0.5rem;

				width: 100%;
				height: 90%;

				border-radius: var(--radius-sm);

				.fracgui-input-number-buttons-container {
					display: flex;
					flex-direction: column;
					align-items: center;
					justify-content: space-between;

					width: 2rem;
					height: 1.5rem;
					margin: 0;
					padding: 0;

					.fracgui-input-number-button {
						cursor: pointer;

						display: flex;
						align-items: center;
						justify-content: center;

						width: 90%;
						height: 45%;

						color: var(--fracgui-input-buttons-color);
						background: var(--fracgui-input-background-dim);
						opacity: 0.5;

						border: none;
						border-radius: var(--radius-xs);
						box-shadow: var(--fracgui-input-number-buttons-shadow-inset);

						transition: 0.15s;

						svg {
							width: 1rem;
							height: 1rem;

							color: var(--fracgui-input-buttons-icon-color);
							opacity: 0.1;

							scale: 1;
							transition: 0.15s;

							user-select: none;
							pointer-events: none;
						}

						&:hover {
							box-shadow: var(--fracgui-input-number-buttons-shadow-inset-hover);
							background: var(--fracgui-input-background);
							opacity: 1;

							svg {
								// opacity: 1 !important;
								opacity: 1;
							}
						}

						&:active {
							// background: unset;
							background: var(--fracgui-input-background);
							box-shadow: var(--fracgui-input-number-buttons-shadow-inset-active);
							opacity: 1;

							svg {
								// opacity: 1 !important;
								opacity: 1;
								color: var(--fracgui-input-buttons-icon-color-active);
								//? svg shadow glow.
								filter: drop-shadow(0 0 3px var(--theme-a));
							}
						}
					}

					.fracgui-input-number-buttons-increment {
						border-top-left-radius: var(--radius);
						border-top-right-radius: var(--radius);
					}
					.fracgui-input-number-buttons-decrement {
						border-bottom-left-radius: var(--radius);
						border-bottom-right-radius: var(--radius);
					}
				}
			}

			// @at-root .fracgui-input-container:hover {
			// 	.fracgui-input-number-input {
			// 		color: var(--fg-b);
			// 	}

			// 	input.fracgui-input-number-range::-webkit-slider-thumb {
			// 		background-color: var(--bg-d);
			// 		transition: 0.15s;
			// 		opacity: 1;

			// 		&:active {
			// 			background-color: var(--theme-a);
			// 		}
			// 	}
			// }

			// &:has(.fracgui-input-number-input:active, .fracgui-input-number-range) {
			// 	.fracgui-input-number-input {
			// 		color: var(--fg-b);
			// 	}
			// }

			//- Range <input>

			input.fracgui-input-number-range {
				-webkit-appearance: none;
				appearance: none;

				width: 100%;
				height: 0.5rem;

				accent-color: var(--fracgui-input-number-range-color);
				background: var(--fracgui-input-number-range-background);
				border-radius: var(--radius-xs);
				box-shadow: var(--fracgui-input-number-range-shadow);
				outline: var(--fracgui-input-number-range-outline);

				opacity: 0.7;
				transition: 0.15s;

				overflow: visible;
				min-width: 1rem;

				&:hover {
					opacity: 1;
				}
				&:active {
					// background: rgba(var(--theme-a-rgb), 0.1);
					background: color-mix(
						in lch,
						var(--theme-a),
						var(--fracgui-input-number-range-background)
					);
				}

				@mixin rangeThumb {
					-webkit-appearance: none;
					appearance: none;

					width: 0.5rem;
					height: 1rem;

					background: var(--fracgui-input-number-range-color);
					border-radius: var(--radius-xs);
					border: none;

					transition: 0.15s;

					cursor: pointer;
					z-index: 10;
				}
				&::-webkit-slider-thumb {
					@include rangeThumb;
				}
				&::-moz-range-thumb {
					@include rangeThumb;
				}

				@mixin rangeThumbActive {
					background: var(--theme-a);
					box-shadow: 0 0 20px var(--theme-a);
					opacity: 1;
				}
				&:active {
					&::-webkit-slider-thumb {
						@include rangeThumbActive;
					}
					&::-moz-range-thumb {
						@include rangeThumbActive;
					}
				}

				@mixin rangeTrack {
					-webkit-appearance: none;
					-moz-appearance: none;
					appearance: none;

					border-radius: var(--radius-sm);
					border: none;
					cursor: pointer;
					z-index: 9;
				}
				&::-moz-range-track {
					@include rangeTrack;
				}
				&::-webkit-slider-runnable-track {
					@include rangeTrack;
				}
			}

			//- Number <input>

			.fracgui-input-number-input,
			.fracgui-input-text-input {
				-webkit-appearance: textfield;
				-moz-appearance: textfield;
				appearance: textfield;

				width: 100%;
				min-width: 2rem;
				max-width: var(--fracgui-input-section-2-width);

				height: 1.25rem;

				color: var(--fracgui-input-color);
				background: var(--fracgui-input-background-dim);
				background-image: var(--fracgui-input-background-image);
				box-shadow: var(--fracgui-input-shadow);
				border-radius: var(--radius-sm);

				// opacity: 0.5;
				// color: var(--fg-d);
				border: none;
				outline: var(--fracgui-input-outline);

				font-family: var(--font-mono);
				font-size: var(--fracgui-input-number-font-size);
				text-align: center;
				font-variation-settings: 'wght' 500;

				transition: 0.15s;
				overflow: visible;

				&:hover {
					background: var(--fracgui-input-background);
					// opacity: 1;
				}

				&::-webkit-inner-spin-button,
				&::-webkit-outer-spin-button {
					-webkit-appearance: none;
					-moz-appearance: none;
					appearance: none;
					display: none;
				}

				&.dragging {
					outline: 1px solid rgba(var(--theme-a-rgb), 0.5);
					box-shadow: 0 0 0.75rem rgba(var(--theme-a-rgb), transparent 0.33);
				}
			}

			//? Color Input

			.fracgui-input-color-container {
				display: flex;
				flex-direction: row;
				justify-content: space-between;
				// align-items: center;
				gap: 0.75rem;

				width: 100%;
				margin: 0.25rem 0;
				// margin: 0.5rem 0;
				// padding: 0.15rem 0;
				// height: calc(100% - 0.3rem);

				//- Current Color

				.fracgui-input-color-current-color-container {
					position: relative;

					.copy-button {
						position: absolute;
						top: -8px;
						right: -8px;

						height: 1.5rem;
						padding: 3px;
						background: none !important;

						color: var(--fg-d);
						filter: brightness(0.75) contrast(0.8);
						backdrop-filter: none;
						svg {
							.back {
								fill: var(--fg-d);
							}
						}
						&:hover {
							filter: brightness(1) contrast(1);
							backdrop-filter: none;
							color: var(--fg-a);
							svg {
								.back {
									fill: var(--fg-a);
								}
							}
						}

						opacity: 0;
						z-index: 10;
					}

					&:hover {
						.copy-button {
							opacity: 1;
						}
					}
				}

				.fracgui-input-color-current-color-background {
					$size: 8px;
					$size2: $size * 2;
					$color: var(--bg-a);

					width: var(--fracgui-input-section-2-width);
					min-width: var(--fracgui-input-section-2-width);
					height: 1.5rem;

					background-image: linear-gradient(45deg, $color 25%, transparent 25%),
						linear-gradient(-45deg, $color 25%, transparent 25%),
						linear-gradient(45deg, transparent 75%, $color 75%),
						linear-gradient(-45deg, transparent 75%, $color 75%);
					background-size: $size2 $size2;
					background-position:
						0 0,
						0 $size,
						$size (-$size),
						(-$size) 0px;
					border-radius: var(--radius-sm);
					overflow: hidden;

					cursor: pointer;

					// clip-path: inset(.25rem 0 .25rem 0);
					clip-path: xywh(0 12% 100% 72% round var(--radius-sm));
				}

				.fracgui-input-color-current-color-display {
					height: 100%;
				}

				//? Body

				.fracgui-input-color-body {
					position: relative;
					display: flex;
					flex-direction: column;
					justify-content: center;
					// gap: 0.5rem;

					min-width: 0;
					width: var(--fracgui-input-section-3-width);

					//- Canvas

					.fracgui-input-color-picker-container {
						position: relative;
						display: flex;
						flex-direction: column;
						gap: 0.25rem;

						.fracgui-input-color-picker-canvas {
							display: flex;

							width: 100%;
							height: 3rem;

							border-radius: var(--radius);

							cursor: pointer;
							overflow: hidden;
						}

						.fracgui-input-color-picker-handle {
							position: absolute;
							top: 0;
							left: 0;

							width: 0.5rem;
							height: 0.5rem;
							translate: -50% -50%;

							border-radius: 50%;
							border: 1px solid var(--fg-a);
							box-shadow: 0 0 0.25rem 0rem var(--bg-d);
							opacity: 0;

							transition-property: all, opacity;
							transition-delay: 0s, 0s;
							transition-duration: 0.2s, 0.33s;
							transition-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);

							pointer-events: none;
						}

						&.expanded {
							// margin-bottom: 0.25rem;

							.fracgui-input-color-picker-handle {
								opacity: 1;
								transition-delay: 0s, 0.25s;
							}
						}

						//- Hue Slider

						@mixin rangeThumb {
							appearance: none;

							width: 0.25rem;
							height: 0.5rem;
							padding: 0;

							background-color: var(--fracgui-input-number-range-color);
							border: none;

							transition: 0.15s;

							cursor: pointer;
							z-index: 10;
						}

						.fracgui-input-color-picker-hue {
							appearance: none;

							width: 99%;
							border-radius: var(--radius-sm);
							background: none;
							height: 0.5rem;

							&::-webkit-slider-thumb {
								@include rangeThumb;
							}
							&::-moz-range-thumb {
								@include rangeThumb;
							}

							@mixin rangeTrack {
								appearance: none;

								background: linear-gradient(
									to right,
									hsl(0, 100%, 50%),
									hsl(60, 100%, 50%),
									hsl(120, 100%, 50%),
									hsl(180, 100%, 50%),
									hsl(240, 100%, 50%),
									hsl(300, 100%, 50%),
									hsl(360, 100%, 50%)
								);

								border-radius: var(--radius-sm);
								border: none;
								cursor: pointer;
								z-index: 1;
								background-color: none;
							}
							&::-webkit-slider-runnable-track {
								@include rangeTrack;
							}
							&::-moz-range-track {
								@include rangeTrack;
							}
						}

						//- Alpha Slider

						.fracgui-input-color-picker-alpha {
							appearance: none;

							width: 99%;
							border-radius: var(--radius-sm);
							background-color: transparent;

							&::-webkit-slider-thumb {
								@include rangeThumb;
							}
							&::-moz-range-thumb {
								@include rangeThumb;
							}

							&::-webkit-slider-runnable-track {
								appearance: none;

								background: linear-gradient(to right, transparent, currentColor);

								border-radius: var(--radius-sm);
								border: none;
								cursor: pointer;
								z-index: 1;
							}
							&::-moz-range-track {
								appearance: none;

								background: linear-gradient(to right, transparent, currentColor);

								border-radius: var(--radius-sm);
								border: none;
								cursor: pointer;
								z-index: 1;
							}
						}
					}

					//- RGB Components

					.fracgui-input-color-components-container {
						display: flex;
						align-items: center;
						// height: 1.5rem;
						gap: 0.75rem;

						.fracgui-input-color-components-text {
							position: absolute;
							left: 2.25rem;
							max-width: 5rem;

							opacity: 0;
							transform: translateX(-0.5rem);
							pointer-events: none;
							&.visible {
								opacity: 1;
								transform: translateX(0);
								pointer-events: all;
							}
						}

						.fracgui-input-color-components-select-container {
							width: 2rem;

							color: var(--fg-d);
							@at-root .fracgui-root[mode='light'] & {
								color: var(--bg-e);
							}

							font-size: var(--font-xs);
							font-family: var(--font-mono);

							span {
								transition: 0.4s;
								text-shadow: 0 0 0 transparent;
							}

							.fracgui-controller-select-selected {
								font-size: var(--font-xxs);
							}
						}

						&:has(input.a.hovering) {
							.fracgui-input-color-components-select-container span.a {
								color: var(--fg-a);
							}
						}
						&:has(input.a.dragging) {
							.fracgui-input-color-components-select-container span.a {
								color: var(--theme-a);
								text-shadow: 0 0 0.5rem var(--theme-a);
							}
						}

						&:has(input.b.hovering) {
							.fracgui-input-color-components-select-container span.b {
								color: var(--fg-a);
							}
						}
						&:has(input.b.dragging) {
							.fracgui-input-color-components-select-container span.b {
								color: var(--theme-a);
								text-shadow: 0 0 0.5rem var(--theme-a);
							}
						}

						&:has(input.c.hovering) {
							.fracgui-input-color-components-select-container span.c {
								color: var(--fg-a);
							}
						}
						&:has(input.c.dragging) {
							.fracgui-input-color-components-select-container span.c {
								color: var(--theme-a);
								text-shadow: 0 0 0.5rem var(--theme-a);
							}
						}

						&:has(input.d.hovering) {
							.fracgui-input-color-components-select-container span.d {
								color: var(--fg-a);
							}
						}
						&:has(input.d.dragging) {
							.fracgui-input-color-components-select-container span.d {
								color: var(--theme-a);
								text-shadow: 0 0 0.5rem var(--theme-a);
							}
						}

						.fracgui-input-color-components-numbers-container {
							display: flex;
							align-items: center;
							justify-content: space-between;
							gap: 0.25rem;

							width: 90%;

							.fracgui-input-number-input {
								height: 1.25rem;
								max-width: unset;

								color: var(--fracgui-input-color);
								background: var(--fracgui-input-background-dim);
								border-radius: var(--radius-sm);
								box-shadow: var(--fracgui-input-shadow);
								outline: var(--fracgui-input-outline);

								transition: 0.15s;

								overflow: visible;

								opacity: 0;
								transform: translateX(-0.5rem);
								pointer-events: none;
								&.visible {
									// opacity: 0.7;
									opacity: 1;
									background: var(--fracgui-input-background);
									transform: translateX(0);
									pointer-events: all;
								}
								&:hover {
									color: var(--fg-b);
									opacity: 1;
									background: var(--fracgui-input-background);
								}
							}
						}
					}
				}
			}
		}

		//* Accents for when an input's content section is hovered over.

		&:hover {
			.fracgui-input-number-input {
				background: var(--fracgui-input-background);
			}

			.fracgui-input-number-container {
				.fracgui-input-number-buttons-container {
					.fracgui-input-number-button {
						opacity: 1;
						background: var(--fracgui-input-background);
					}
				}
			}

			.fracgui-input-number-input {
				color: var(--fg-b);
			}

			input.fracgui-input-number-range::-webkit-slider-thumb {
				background-color: var(--bg-d);
				transition: 0.15s;
				opacity: 1;

				&:active {
					background-color: var(--theme-a);
				}
			}
		}

		.fracgui-input-content {
			//
			//? Select Input

			.fracgui-input-select-container {
				width: 100%;
				height: 100%;

				font-size: var(--font-xs);
				font-family: var(--fracgui-font);

				.fracgui-controller-select-selected {
					line-height: 1.25rem;
					height: 1.25rem;

					background: var(--fracgui-input-background-dim);
					border-radius: var(--radius-xs);
					outline: var(--fracgui-input-outline);

					//? chevron icon
					&::before {
						content: '\276F';
						position: absolute;
						top: 0;
						right: 0.5rem;

						margin: auto;

						color: var(--bg-d);
						transform: rotate(90deg) translateX(0);
						transition: 0.2s;
					}

					filter: unset;

					&.active,
					&:hover,
					&:focus-visible,
					&:active {
						background: var(--fracgui-input-background);
						outline-offset: 0rem;
						&::before {
							color: var(--bg-e);
						}
					}
					&.active {
						outline: var(--fracgui-input-outline);

						&::before {
							color: var(--fg-d);
							transform: rotate(90deg) translateX(2px);
						}
					}
				}

				// The dropdown portals to the body to escape the root's containment clipping.
				@at-root body {
					@keyframes dropdown {
						from {
							transform: translate(0, -0.25rem);
						}
						to {
							transform: translate(0, 0.1rem);
						}
					}

					.fracgui-controller-select-dropdown {
						&.expanded {
							animation: dropdown 0.15s forwards;
						}

						// todo - We can't use the theme vars (cus portal).  Will need to fix this.
						// background: var(--fracgui-input-background);
						// backdrop-filter: blur(var(--fracgui-blur));
						// .fracgui-controller-select-option:hover {
						// background: var(fracgui-input-background-dim);
						// }

						color: var(--light-b);
						background: color-mix(in lch, var(--dark-a) 60%, transparent);
						backdrop-filter: blur(5px);
						outline: 1px solid;
						outline-color: var(--dark-b);

						.fracgui-controller-select-option:hover {
							color: var(--light-a);
							background: color-mix(in lch, var(--dark-c), transparent);
							outline-color: var(--dark-b);
						}
					}
					&:has(.fracgui-root[mode='light']) {
						.fracgui-controller-select-dropdown {
							color: var(--dark-b);
							background: color-mix(in lch, var(--light-a) 60%, transparent);
							outline-color: var(--light-b);

							.fracgui-controller-select-option:hover {
								color: var(--dark-a);
								background: color-mix(in lch, var(--light-d) 60%, transparent);
								outline-color: var(--light-d);
							}
						}
					}
				}
			}
		}
	}
}
//⌟

//·- wip ···································································¬
// .kv {
// 	display: flex;
// 	align-items: center;
// 	gap: 0.5rem;

// 	width: 100%;
// 	padding: 0.5rem;

// 	color: var(--fg-c);
// 	outline: 1px solid rgba(var(--bg-b-rgb), 0.5);
// 	border-radius: var(--radius);

// 	font-size: 1rem;

// 	.k {
// 		display: flex;

// 		width: fit-content;
// 		min-width: 5rem;
// 		max-width: 50%;

// 		font-weight: 600;
// 		font-size: var(--fracgui-input-font-size);
// 		font-family: var(--font-b);
// 	}

// 	.v {
// 		all: unset;
// 		box-sizing: border-box;

// 		display: flex;
// 		flex-direction: column;
// 		justify-content: center;
// 		align-items: center;
// 		gap: 0.25rem;

// 		width: 100%;

// 		font-family: var(--font-mono);

// 		select {
// 			// all: unset;
// 			cursor: pointer;

// 			width: 100%;
// 			padding: 0.2rem 0.5rem 0.23rem 0.5rem;
// 			text-align: center;

// 			color: var(--theme-a);
// 			background: var(--bg-b);
// 			border-radius: var(--radius-sm);
// 			border: 1px solid var(--bg-c);

// 			font-weight: 300;
// 			transition:
// 				border-color 0.15s,
// 				font-weight 0.6s;

// 			&:hover {
// 				border-color: rgba(var(--theme-a-rgb), 0.33);

// 				font-weight: 500;
// 			}
// 		}

// 		button {
// 			all: unset;
// 			position: relative;
// 			box-sizing: border-box;
// 			cursor: pointer;

// 			width: 100%;
// 			margin: auto;
// 			padding: 0.2rem 0.5rem 0.23rem 0.5rem;
// 			text-align: center;

// 			display: grid;
// 			div {
// 				grid-area: 1 / 1;
// 			}

// 			background: var(--bg-b);
// 			border-radius: var(--radius-sm);
// 			border: 1px solid var(--bg-c);
// 			div {
// 				color: var(--theme-a);
// 			}

// 			font-weight: 300;
// 			transition:
// 				border-color 0.15s,
// 				font-weight 0.6s;

// 			&:hover {
// 				border-color: rgba(var(--theme-a-rgb), 0.33);

// 				font-weight: 500;
// 			}

// 			&.active:not(:has(.delete:hover)) {
// 				div {
// 					color: var(--bg-b);
// 				}
// 				background: var(--theme-a);
// 				// border-color: var(--theme-a);
// 			}

// 			&:has(.delete:hover) {
// 				div {
// 					color: tomato;
// 				}
// 			}

// 			.delete {
// 				// outline: 1px solid rgba(255, 99, 71, 0.45); // debug-outline
// 				all: unset;
// 				position: absolute;
// 				right: 0.25rem;
// 				top: 0;
// 				bottom: 0;

// 				width: 1rem;
// 				height: 1rem;
// 				margin: auto;
// 				padding: 0.05rem;
// 				// padding-top: 0;

// 				color: var(--bg-a);
// 				border-radius: 0.2rem;

// 				opacity: 0;
// 				transition-property: opacity, color, background;
// 				transition-duration: 0.15s;
// 				z-index: 1;

// 				&:hover {
// 					background: var(--fg-a);
// 					// background: tomato;
// 					// color: var(--bg-a);
// 					color: tomato !important;
// 				}
// 			}

// 			&:hover .delete {
// 				opacity: 1;
// 			}
// 		}
// 	}
// }
//⌟
