{
  "type": "ts",
  "fileName": "time.ts",
  "filePath": "src/lib/utils/time.ts",
  "exports": [
    {
      "name": "start",
      "type": "typeof start",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Like `console.time`, returning a `console.timeEnd` function.\n *\n * @param label - Console label.\n *\n * @returns `console.timeEnd` for the given label.\n *\n * @example\n *\n * const end = start('foo') // do stuff end() // foo 1.2s\n */",
        "summary": "<p>Like<code>console.time</code>, returning a<code>console.timeEnd</code>function.</p>\n",
        "params": [
          {
            "name": "label",
            "description": "Console label."
          }
        ],
        "returns": "`console.timeEnd`for the given label.",
        "examples": [
          {
            "name": "",
            "content": "<p>const end = start(&#39;foo&#39;)\n// do stuff\nend() // foo 1.2s</p>\n"
          }
        ]
      }
    },
    {
      "name": "fmtTime",
      "type": "typeof fmtTime",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Formats a number representing time. Smaller numbers are formatted in milliseconds, and larger numbers in seconds. In both cases, precision is kept to a minimum and trailing zeroes are removed.\n *\n * @param n - Time in milliseconds.\n *\n * @returns Formatted time string.\n */",
        "summary": "<p>Formats a number representing time.  Smaller numbers are formatted inmilliseconds, and larger numbers in seconds. In both cases, precisionis kept to a minimum and trailing zeroes are removed.</p>\n",
        "params": [
          {
            "name": "n",
            "description": "Time in milliseconds."
          }
        ],
        "returns": "Formatted time string."
      }
    },
    {
      "name": "StartOptions",
      "type": "StartOptions",
      "isDefaultExport": false,
      "comment": {
        "raw": "/**\n * Options for `start`.\n */",
        "summary": "<p>Options for<code>start</code>.</p>\n"
      }
    }
  ]
}